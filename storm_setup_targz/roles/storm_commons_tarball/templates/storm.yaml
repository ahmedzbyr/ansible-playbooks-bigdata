# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

########### These MUST be filled in for a storm configuration
#

storm.zookeeper.servers:
{% for server in groups['zookeepernodes'] %}
  - {{ server }}
{% endfor %}


nimbus.host: "{{ groups['stormnimbusnodes'][0] }}"

storm.local.dir: {{ storm_local_dir }}

supervisor.slots.ports:
{% for port in storm_supervisor_slots_ports %}
  - {{port}}
{% endfor %}

storm.log.dir: "{{ storm_log_dir }}"
nimbus.childopts: "{{ storm_nimbus_childopts }}"

ui.childopts: "{{ storm_ui_childopts }}"
ui.port: {{storm_ui_port}}

supervisor.childopts: "{{storm_supervisor_childopts}}"
worker.childopts: "{{storm_worker_childopts}}"

#worker.childopts: "-Xmx1024m -XX:MaxPermSize=500m -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -verbose:gc -Xloggc:/opt/storm/logs/gc-storm-worker-%ID%.log"

storm.messaging.netty.max_retries: 300
storm.messaging.netty.max_wait_ms: 10000
storm.messaging.netty.min_wait_ms: 1000



# ##### These may optionally be filled in:
#    
## List of custom serializations
# topology.kryo.register:
#     - org.mycompany.MyType
#     - org.mycompany.MyType2: org.mycompany.MyType2Serializer
#
## List of custom kryo decorators
# topology.kryo.decorators:
#     - org.mycompany.MyDecorator
#
## Locations of the drpc servers
# drpc.servers:
#     - "server1"
#     - "server2"

## Metrics Consumers
# topology.metrics.consumer.register:
#   - class: "backtype.storm.metric.LoggingMetricsConsumer"
#     parallelism.hint: 1
#   - class: "org.mycompany.MyMetricsConsumer"
#     parallelism.hint: 1
#     argument:
#       - endpoint: "metrics-collector.mycompany.org"
